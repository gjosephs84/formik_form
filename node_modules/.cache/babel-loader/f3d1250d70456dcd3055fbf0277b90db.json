{"ast":null,"code":"var _jsxFileName = \"/Users/Greg/Desktop/MIT XPro/Week 13/build-a-formik-form_starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // TODO: import useFormik from formik library\n\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: errors => {\n      console.log(`errors.emailField is ${errors.emailField} and errors.pswField is ${errors.pswField}`);\n\n      if (!errors.emailField && !errors.pswField) {\n        console.log('triggered');\n        alert(\"Login Successful\");\n      } else {\n        alert(\"Please check your inputs\");\n      }\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.emailField) errors.emailField = \"Field required\";\n      if (!values.pswField) errors.pswField = \"Field reuired\";\n\n      if (values.emailField) {\n        if (!values.emailField.includes('@') && !values.emailField.includes('.')) errors.emailField = \"Username should be an email\";\n      }\n\n      ;\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"emailField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), formik.errors.emailField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"pswField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), formik.errors.pswField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"submitBtn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Greg/Desktop/MIT XPro/Week 13/build-a-formik-form_starter/src/App.js"],"names":["React","useFormik","App","formik","initialValues","emailField","pswField","onSubmit","errors","console","log","alert","validate","values","includes","handleSubmit","handleChange","color"],"mappings":"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","sourcesContent":["import React from \"react\";\n// TODO: import useFormik from formik library\nimport {useFormik} from 'formik';\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: '',\n    },\n    onSubmit: errors => {\n      console.log(`errors.emailField is ${errors.emailField} and errors.pswField is ${errors.pswField}`);\n      if ((!errors.emailField) && (!errors.pswField)) {\n        console.log('triggered');\n        alert(\"Login Successful\");\n      }\n      else\n      {\n        alert(\"Please check your inputs\");\n      }\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.emailField) errors.emailField = \"Field required\";\n      if (!values.pswField) errors.pswField = \"Field reuired\";\n      if (values.emailField) {\n        if ((!values.emailField.includes('@')) && (!values.emailField.includes('.'))) errors.emailField = \"Username should be an email\";\n      };\n      return errors\n    }\n  })\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n      <div>Email</div>\n      <input name=\"emailField\" type=\"text\" onChange={formik.handleChange} value={formik.values.emailField}/>\n      {formik.errors.emailField ? <div style={{color: 'red'}}>{formik.errors.emailField}</div> : null}\n      <div>Password</div>\n      <input name=\"pswField\" type=\"text\" onChange={formik.handleChange} value={formik.values.pswField}/>\n      {formik.errors.pswField ? <div style={{color: 'red'}}>{formik.errors.pswField}</div> : null}\n      <button name=\"submitBtn\" type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}